{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PC\\\\Documents\\\\Ramirez\\\\React\\\\omnistack_2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\Ramirez\\\\React\\\\omnistack_2\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequests = _useState4[1];\n\n  const user_id = localStorage.getItem('user');\n  const socket = useMemo(() => socketio('http://localhost:3333', {\n    query: {\n      user_id\n    }\n  }), [user_id]);\n  useEffect(() => {\n    socket.on('booking-request', data => {\n      setRequests([...requests, data]);\n    });\n  }, [requests, socket]);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n      console.log(response.data);\n    }\n\n    loadSpots();\n  }, []);\n\n  async function handleAccept(id) {\n    await api.post(`/bookings/${id}/approvals`);\n    setRequests(requests.filter(request => request._id !== id));\n  }\n\n  ;\n\n  async function handleReject(id) {\n    await api.post(`/bookings/${id}/rejections`);\n    setRequests(requests.filter(request => request._id !== id));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, requests.map(request => React.createElement(\"li\", {\n    key: request._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, request.user.email), \" est\\xE1 solicitando uma reserva em\", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" request.spot.company\"), \" para a data: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, request.date)), React.createElement(\"button\", {\n    className: \"accept\",\n    onClick: () => handleAccept(request._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"ACEITAR\"), React.createElement(\"button\", {\n    className: \"reject\",\n    onClick: () => handleReject(request._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"REJEITAR\")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: `url(${spot.thumbnail_url})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, spot.price ? `R$${spot.price}/dia` : 'GRATUITO', \" \")))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Cadastrar novo spot\")));\n}","map":{"version":3,"sources":["C:/Users/PC/Documents/Ramirez/React/omnistack_2/frontend/src/pages/Dashboard/index.js"],"names":["React","useEffect","useState","useMemo","Link","socketio","api","Dashboard","spots","setSpots","requests","setRequests","user_id","localStorage","getItem","socket","query","on","data","loadSpots","response","get","headers","console","log","handleAccept","id","post","filter","request","_id","handleReject","map","user","email","date","spot","backgroundImage","thumbnail_url","company","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport socketio from 'socket.io-client';\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [spots, setSpots] = useState([]);\r\n    const [requests, setRequests] = useState([]);\r\n\r\n    const user_id = localStorage.getItem('user')\r\n    const socket = useMemo( () =>  socketio('http://localhost:3333', {\r\n        query: { user_id },\r\n    }), [ user_id ]);\r\n\r\n    useEffect(() => {\r\n        socket.on('booking-request', data => {\r\n            setRequests([...requests, data]);\r\n        });\r\n    }, [requests, socket]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function loadSpots() {\r\n            const user_id = localStorage.getItem('user')\r\n            const response = await api.get('/dashboard', {\r\n                headers: { user_id }\r\n            });\r\n            setSpots(response.data);\r\n            console.log(response.data);\r\n        }\r\n\r\n        loadSpots();\r\n\r\n    }, []);\r\n\r\n    async function handleAccept(id){\r\n        await api.post(`/bookings/${id}/approvals`);\r\n        setRequests(requests.filter(request => request._id !== id));\r\n    };\r\n\r\n    async function handleReject(id){\r\n        await api.post(`/bookings/${id}/rejections`);\r\n        setRequests(requests.filter(request => request._id !== id));\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"notifications\">\r\n                {requests.map(request => (\r\n                    <li key={request._id}>\r\n                        <p>\r\n                            <strong>{request.user.email}</strong> estÃ¡ solicitando uma reserva em \r\n                            <strong> request.spot.company</strong> para a data: <strong>{request.date}</strong>\r\n                        </p>\r\n                        <button className=\"accept\" onClick={() => handleAccept(request._id)}>ACEITAR</button>\r\n                        <button className=\"reject\" onClick={() => handleReject(request._id)}>REJEITAR</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <ul className=\"spot-list\">\r\n                {spots.map(spot => (\r\n                    <li key={spot._id}>\r\n                        <header style={{ backgroundImage: `url(${spot.thumbnail_url})` }}></header>\r\n                        <strong>{spot.company}</strong>\r\n                        <span>{spot.price ? `R$${spot.price}/dia` : 'GRATUITO'} </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <Link to=\"/new\">\r\n                <button className=\"btn\">Cadastrar novo spot</button>\r\n            </Link>\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}